// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  
}

generator client {
  provider = "prisma-client-js"
}

model Book {
  id               String        @id @default(cuid())
  title            String        @default("")
  description      String        @default("")
  edition          Int           @default(1)
  author           Author?       @relation("Book_author", fields: [authorId], references: [id])
  authorId         String?       @map("author")
  gender           Gender?       @relation("Book_gender", fields: [genderId], references: [id])
  genderId         String?       @map("gender")
  quantity         Int?          @default(0)
  price            Int?          @default(0)
  image_id         String?
  image_filesize   Int?
  image_width      Int?
  image_height     Int?
  image_extension  String?
  compras          Buy[]         @relation("Buy_libro")
  publisher        Publisher?    @relation("Book_publisher", fields: [publisherId], references: [id])
  publisherId      String?       @map("publisher")
  reservations     Reservation[] @relation("Reservation_book")
  from_Review_book Review[]      @relation("Review_book")

  @@index([authorId])
  @@index([genderId])
  @@index([publisherId])
}

model User {
  id               String        @id @default(cuid())
  name             String        @default("")
  email            String        @unique @default("")
  password         String
  createdAt        DateTime?     @default(now())
  role             String?       @default("CLIENT")
  compras          Buy[]         @relation("Buy_cliente")
  reservations     Reservation[] @relation("Reservation_user")
  from_Review_user Review[]      @relation("Review_user")
}

model Author {
  id        String @id @default(cuid())
  name      String @default("")
  biography String @default("")
  books     Book[] @relation("Book_author")
}

model Buy {
  id             String   @id @default(cuid())
  cliente        User?    @relation("Buy_cliente", fields: [clienteId], references: [id])
  clienteId      String?  @map("cliente")
  libro          Book?    @relation("Buy_libro", fields: [libroId], references: [id])
  libroId        String?  @map("libro")
  fechaCompra    DateTime @default(now())
  cantidad       Int      @default(1)
  estadoEnvio    String?  @default("PENDIENTE")
  direccionEnvio String   @default("")
  codigoPostal   String   @default("")
  ciudad         String   @default("")
  telefono       String   @default("")

  @@index([clienteId])
  @@index([libroId])
}

model Gender {
  id              String  @id @default(cuid())
  name            String  @default("")
  books           Book[]  @relation("Book_gender")
  image_id        String?
  image_filesize  Int?
  image_width     Int?
  image_height    Int?
  image_extension String?
}

model Publisher {
  id      String @id @default(cuid())
  name    String @default("")
  address String @default("")
  contact String @default("")
  books   Book[] @relation("Book_publisher")
}

model Reservation {
  id              String    @id @default(cuid())
  book            Book?     @relation("Reservation_book", fields: [bookId], references: [id])
  bookId          String?   @map("book")
  user            User?     @relation("Reservation_user", fields: [userId], references: [id])
  userId          String?   @map("user")
  status          String?   @default("PENDING")
  reservationDate DateTime? @default(now())
  sucursal        Sucursal? @relation("Reservation_sucursal", fields: [sucursalId], references: [id])
  sucursalId      String?   @map("sucursal")
  cantidad        Int       @default(1)

  @@index([bookId])
  @@index([userId])
  @@index([sucursalId])
}

model Review {
  id      String  @id @default(cuid())
  book    Book?   @relation("Review_book", fields: [bookId], references: [id])
  bookId  String? @map("book")
  user    User?   @relation("Review_user", fields: [userId], references: [id])
  userId  String? @map("user")
  rating  Int?    @default(0)
  comment String  @default("")

  @@index([bookId])
  @@index([userId])
}

model Sucursal {
  id                        String        @id @default(cuid())
  name                      String        @default("")
  address                   String        @default("")
  city                      String        @default("")
  postal                    String        @default("")
  from_Reservation_sucursal Reservation[] @relation("Reservation_sucursal")
}
